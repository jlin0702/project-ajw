name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
      runs-on: ubuntu-latest
      name: Run Tests
      env:
        TESTING: true
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.8.9' # Change to your desired Python version
        
        - name: Setup Python Virtual Environment
          run: python3 -m venv python3-virtualenv

        - name: Install Dependencies
          run: python3-virtualenv/bin/pip3 install -r requirements.txt

        - name: Run Tests
          run: ./run_test.sh

  deploy:
    needs: test
    name: "Deploy to VPS"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy site
        run: ssh my-vps '~/redeploy-site.sh'

      - name: Print container status
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && docker compose ps'

  message:
    name: Send Discord Message
    runs-on: ubuntu-latest
    steps:
      - name: Deployment successful
        if: jobs.deploy.outcome == 'success'
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"

      - name: Deployment unsuccessful
        if: jobs.deploy_site.outcome != 'success'
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=Deployment Unsuccessful"